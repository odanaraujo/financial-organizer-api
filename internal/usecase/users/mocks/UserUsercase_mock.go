// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/odanraujo/financial-organizer-api/internal/usecase/users (interfaces: UserUsercase)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	users "github.com/odanraujo/financial-organizer-api/internal/dto/users"
	users0 "github.com/odanraujo/financial-organizer-api/internal/response/users"
)

// MockUserUsercase is a mock of UserUsercase interface.
type MockUserUsercase struct {
	ctrl     *gomock.Controller
	recorder *MockUserUsercaseMockRecorder
}

// MockUserUsercaseMockRecorder is the mock recorder for MockUserUsercase.
type MockUserUsercaseMockRecorder struct {
	mock *MockUserUsercase
}

// NewMockUserUsercase creates a new mock instance.
func NewMockUserUsercase(ctrl *gomock.Controller) *MockUserUsercase {
	mock := &MockUserUsercase{ctrl: ctrl}
	mock.recorder = &MockUserUsercaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserUsercase) EXPECT() *MockUserUsercaseMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUserUsercase) CreateUser(arg0 context.Context, arg1 users.User) (users0.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0, arg1)
	ret0, _ := ret[0].(users0.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserUsercaseMockRecorder) CreateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserUsercase)(nil).CreateUser), arg0, arg1)
}
